# .gitlab-ci.yml

stages:
  - build
  - package
  - deploy

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

build_app1:
  stage: build
  image: eclipse-temurin:17.0.3_7-jdk-jammy
  script:
    - cd web-app
    - ./gradlew clean bootJar
  artifacts:
    paths:
      - web-app/build/libs/
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - changes:
      - web-app/**/*

package_and_push_app1:
  stage: package
  image: gcr.io/google.com/cloudsdktool/google-cloud-cli:466.0.0-alpine
  needs:
    - build_app1
  services:
    - docker:24.0.5-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  identity: google_cloud
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - gcloud auth configure-docker $GOOGLE_ARTIFACT_REGISTRY_REPOSITORY_LOCATION-docker.pkg.dev
  script:
    - cd web-app
    - docker images
    - docker build -t europe-west1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/app1:$IMAGE_TAG .
    - docker push europe-west1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/app1:$IMAGE_TAG
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - changes:
      - web-app/**/*

# push_app1:
#   stage: push
#   image: docker:stable
#   needs:
#     - package_app1
#   services:
#     - docker:dind
#   variables:
#     DOCKER_HOST: tcp://docker:2375
#     DOCKER_TLS_CERTDIR: ""
#   identity: google_cloud
#   script:
#     - cd web-app
#     - docker images
#     - docker push europe-west1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/app1:$IMAGE_TAG
#   rules:
#     - if: '$CI_COMMIT_BRANCH == "main"'
#     - changes:
#       - web-app/**/*

deploy_app1:
  stage: deploy
  image: google/cloud-sdk
  needs:
    - package_and_push_app1
  identity: google_cloud
  script:
    - gcloud components install gke-gcloud-auth-plugin
    - gcloud container clusters get-credentials $CLUSTER_NAME --zone=$CLUSTER_ZONE --project=$PROJECT_ID
    - kubectl apply -f web-app/app1-deployment.yaml
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - changes:
      - web-app/**/*

build_app2:
  stage: build
  image: eclipse-temurin:17.0.3_7-jdk-jammy
  script:
    - cd api-app
    - ./gradlew clean bootJar
  artifacts:
    paths:
      - api-app/build/libs/
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - changes:
      - api-app/**/*

# package_app1:
#   stage: package
#   identity: google_cloud
#   script:
#     - cd web-app
#     - docker build -t europe-west1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/app1:$IMAGE_TAG .
#   needs:
#     - build_app1
#   rules:
#     - changes:
#       - web-app/**/*

package_and_push_app2:
  stage: package
  image: docker:stable
  needs:
    - build_app2
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  identity: google_cloud
  before_script:
    - gcloud auth configure-docker $GOOGLE_ARTIFACT_REGISTRY_REPOSITORY_LOCATION-docker.pkg.dev
  script:
    - cd api-app
    - docker build -t europe-west1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/app2:$IMAGE_TAG .
    - docker push europe-west1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/app2:$IMAGE_TAG
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - changes:
      - api-app/**/*

# push_app1:
#   stage: push
#   identity: google_cloud
#   script:
#     - docker push europe-west1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/app1:$IMAGE_TAG
#   needs:
#     - package_app1
#   rules:
#     - changes:
#       - web-app/**/*

# push_app2:
#   stage: push
#   image: docker:stable
#   needs:
#     - package_app2
#   services:
#     - docker:dind
#   variables:
#     DOCKER_HOST: tcp://docker:2375
#     DOCKER_TLS_CERTDIR: ""
#   identity: google_cloud
#   script:
#     - docker push europe-west1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/app2:$IMAGE_TAG
#   rules:
#     - if: '$CI_COMMIT_BRANCH == "main"'
#     - changes:
#       - api-app/**/*

# deploy_app1:
#   stage: deploy
#   identity: google_cloud
#   script:
#     - gcloud container clusters get-credentials $CLUSTER_NAME --zone $CLUSTER_ZONE
#     - kubectl apply -f web-app/app1-deployment.yaml
#   only:
#     - main
#   needs:
#     - push_app1

deploy_app2:
  stage: deploy
  needs:
    - package_and_push_app2
  identity: google_cloud
  script:
    - gcloud container clusters get-credentials $CLUSTER_NAME --zone $CLUSTER_ZONE
    - kubectl apply -f api-app/app2-deployment.yaml
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - changes:
      - api-app/**/*